pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                sh 'python3 -m py_compile sources/add2vals.py sources/calc.py'
            }
        }
        stage('Test') {
            steps {
                sh 'py.test --verbose --junit-xml test-reports/results.xml sources/test_calc.py'
            }
            post {
                always {
                    junit 'test-reports/results.xml'
                }
            }
        }
        stage('Policy Evaluation') {
            steps {
                nexusPolicyEvaluation iqApplication: extractProjectName(), iqStage: env.GIT_BRANCH == 'master' ? 'build': 'develop',
                    iqScanPatterns: [
                        [scanPattern: 'requirements.txt']
                    ]
            }
        }
    }
}

// This function extracts the project name from the GIT_URL environment variable.
def extractProjectName() {
    echo "Extracting project name from GIT_URL: ${env.GIT_URL}"
    def match = env.GIT_URL =~ /.+\/([^\/]+)\.git/
    echo "Match: ${match[0]}"
    echo "Matched project name: ${match[0][1]}"
    return match[0][1]
}
